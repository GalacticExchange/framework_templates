require_relative "../../vagrant/common/config/config"
require_relative "../../vagrant/base/ruby_scripts/common"


desc "Build container"
task :build do
  commands = [
      'cd docker; docker build -t scraper . ',
      'docker rm -f scraper; docker create --name scraper scraper',
      'docker cp ../slave/templates/. scraper:/templates/create/.',
      'docker export scraper | gzip > scraper.tar.gz',
  ]
  cmd = commands.join("; ")
  puts "#{cmd}"
  exec cmd
end

desc "Build nutch"
task :build_nutch do
  exec "rm -rf docker/nutch; cd ../../nutch; rm -rf build; rm -rf runtime; ant; cp -R runtime/local ../framework_templates/scraper/docker/nutch"
end

desc "Build scraper"
task :build_scraper do
  exec "rm -rf docker/scraper.jar; cd ../../scraper; mvn clean install; cp target/scraper.jar ../framework_templates/scraper/docker"
end

desc "Run container"
task :run do

  puts `docker import docker/scraper.tar.gz scraper`
  init_vars(
      {
          "_master_ip" => "10.1.0.11",
          "_slave_ip" => "10.1.0.11",
          "elasticsearch" => {"host" => "10.1.0.11", "port" => "9300", "cluster_name" => ""},
          "app_id" => "1234", "consul_host" => "10.1.0.11", "consul_port" => "8500"
      })

  use_container "scraper"

  dcreate_container "scraper", "/etc/bootstrap.sh", [], "127.0.0.1", "scraper", "8.8.8.8", host_records: [], options: "-p 8081:8081/tcp -p 8082:80/tcp", recreate: false

  create_init_lock

  dstart

  dexec "ping -c  1 8.8.8.8"

  wait_until_running

  get_processor.process_template_trees [Dir.getwd + "/slave/templates"], $container

  remove_init_lock

  assert_drunning

end


